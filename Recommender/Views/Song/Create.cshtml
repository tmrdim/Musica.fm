@model Recommender.Model.Song

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Song</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SongTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SongTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SongTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Artist", new { @class = "control-label col-md-2" })
            <div class="form-inline col-md-8">
                @Html.DropDownListFor(model => model.ArtistId, (List<SelectListItem>)ViewBag.Artists, "- Select an Artist -", new { @class = "form-control" })
                <input type="submit" value="Add an Artist" class="btn btn-success btn-sm" />
            </div>
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AuthorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="form-inline col-md-10">
                @Html.EditorFor(model => model.AuthorId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
                <input type="submit" value="Add an Author" class="btn btn-success btn-sm" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GenreId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="form-inline col-md-10">
                @Html.EditorFor(model => model.GenreId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GenreId, "", new { @class = "text-danger" })
                <input type="submit" value="Add Genre" class="btn btn-success btn-sm" />
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Collection", new { @class = "control-label col-md-2" })
            <div class="form-inline col-md-10">
                @Html.DropDownListFor(model => model.CollectionId, (List<SelectListItem>)ViewBag.Collections, "- Select a Collection -", new { @class = "form-control" })
                <input type="submit" value="Add Collection" class="btn btn-success btn-sm" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
